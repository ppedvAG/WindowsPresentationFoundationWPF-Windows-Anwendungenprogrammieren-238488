<Window x:Class="M008.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:M008"
		xmlns:coll="clr-namespace:System.Collections.Generic;assembly=System.Runtime"
        Title="MainWindow" Height="450" Width="300"
		DataContext="{Binding RelativeSource={RelativeSource Self}}"
		WindowStartupLocation="CenterScreen">
	<Window.Resources>
		<!--Globales DataTemplate, welches sich auf alle Personen bezieht-->
		<DataTemplate DataType="{x:Type local:Person}"> <!--WICHTIG: Hier mit x:Type arbeiten um das Template global zu machen-->
			<Border BorderBrush="Aqua" BorderThickness="1">
				<UniformGrid Columns="3">
					<UniformGrid.Resources>
						<Style TargetType="TextBlock">
							<Setter Property="HorizontalAlignment" Value="Center"/>
						</Style>
					</UniformGrid.Resources>
					<!--Über normale Bindings können unserer Personen jetzt gebunden werden-->
					<TextBlock Text="{Binding FirstName}" Foreground="LightGreen"/>
					<TextBlock Text="{Binding LastName}" Foreground="Orange"/>
					<TextBlock Text="{Binding Email}" Foreground="Violet"/>
				</UniformGrid>
			</Border>
		</DataTemplate>
	</Window.Resources>
	<StackPanel>
		<!--Templates-->
		<!--Jede Komponente hat ein Template, dieses kann ausgetauscht werden-->
		<!--Zwei Templates: ControlTemplate und DataTemplate-->

		<!--Über ein ControlTemplate kann das Grundlegende Verhalten und Aussehen einer Komponente komplett verändert werden-->
		<!--Über ein DataTemplate können die Bindings an das Element angepasst werden-->
		<!--Das ItemsPanelTemplate ist effektiv ein ControlTemplate, aber für die Items einer Komponente anstatt für die Komponente selbst-->

		<Button Content="Test" Margin="10" Width="100">
			<Button.Template>
				<ControlTemplate TargetType="Button"> <!--WICHTIG: Wie bei Styles hier den TargetType angeben-->
					<!--Button hat jetzt kein Template mehr -> kein Aussehen mehr-->
					<Border BorderBrush="Aqua" BorderThickness="5">
						<!--Der Text aus Content soll jetzt in dem TextBlock stehen -> TemplateBinding-->
						<!--TemplateBinding: Wird in Templates verwendet, um bereits vorhandene Werte (z.B. Content, Margin, Width, ...) zu verwenden-->
						<TextBlock Text="{TemplateBinding Content}"
								   Margin="{TemplateBinding Margin}"
								   TextAlignment="Center"/>
					</Border>
				</ControlTemplate>
			</Button.Template>
		</Button>
		
		<!--DataTemplate-->
		<!--Funktioniert ähnlich wie ControlTemplate, aber wird in Kombination mit einem Binding verwendet-->
		
		<!--ItemsTemplate-->
		<ComboBox ItemsSource="{Binding Personen}">
			<ComboBox.ItemTemplate>
				<!--DataType setzt beim DataTemplate den DataContext-->
				<DataTemplate DataType="local:Person">
					<Border BorderBrush="Aqua" BorderThickness="1">
						<UniformGrid Columns="3">
							<UniformGrid.Resources>
								<Style TargetType="TextBlock">
									<Setter Property="HorizontalAlignment" Value="Center"/>
								</Style>
							</UniformGrid.Resources>
							<!--Über normale Bindings können unserer Personen jetzt gebunden werden-->
							<TextBlock Text="{Binding FirstName}" Foreground="LightGreen"/>
							<TextBlock Text="{Binding LastName}" Foreground="Orange"/>
							<TextBlock Text="{Binding Email}" Foreground="Violet"/>
						</UniformGrid>
					</Border>
				</DataTemplate>
			</ComboBox.ItemTemplate>

			<!--ItemsPanelTemplate-->
			<!--Ermöglicht, das Bearbeiten des Item Containers-->
			<ComboBox.ItemsPanel>
				<ItemsPanelTemplate>
					<UniformGrid Columns="3"/>
				</ItemsPanelTemplate>
			</ComboBox.ItemsPanel>
		</ComboBox>

		<!--Diese ListBox erbt jetzt das DataTemplate-->
		<ListBox ItemsSource="{Binding Personen}"/>

		<Button Click="Button_Click" Content="Neue Person"/>

		<!--Colors MarkupExtension einbinden-->
		<ComboBox ItemsSource="{local:Colors}"
				  SelectedValue="{Binding p.Lieblingsfarbe}"
				  SelectedValuePath="Color">
			<ComboBox.ItemTemplate>
				<DataTemplate DataType="local:NamedColor">
					<StackPanel Orientation="Horizontal">
						<Rectangle Width="20" Height="20" Stroke="Black" Margin="2" Fill="{Binding ColorBrush}"/>
						<TextBlock Text="{Binding Name}" Margin="5, 0, 0, 0" VerticalAlignment="Center" FontSize="14"/>
					</StackPanel>
				</DataTemplate>
			</ComboBox.ItemTemplate>
		</ComboBox>
	</StackPanel>
</Window>
