<Window x:Class="M003.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:M003"
        Title="MainWindow" Height="8000" Width="300"
		WindowStartupLocation="CenterScreen"
		SizeToContent="Height">
	<StackPanel Margin="5">
		<!--Width & Height-->
		<!--Setzt eine fixe Höhe/Breite von einer Komponente-->
		<!--Normalerweise passt sich jede Komponente auf das vorgegebene Layout der Parentkomponente an-->
		<!--MinWidth/MinHeight, MaxWidth/MaxHeight-->
		<!--Minimale/Maximale Breite/Höhe der Komponente an (z.B. wenn das Fenster vergrößert/verkleinert wird)-->
		<Button Content="Test" Height="50" MaxWidth="100"/>

		<!--Margin & Padding-->
		<!--Margin: Abstand von dem Element selbst zu dem umliegenden Element-->
		<!--Abstandsreihenfolgen: Links, Oben, Rechts, Unten-->
		<!--Margin="5": Alle Seiten 5-->
		<!--Margin="5, 10": Links und Rechts 5, Oben und Unten 10-->
		<!--Margin="5, 10, 20, 40": Links 5, Oben 10, Rechts 20, Unten 40-->
		
		<!--Padding: Abstand vom Inhalt der Komponente zu sich selbst-->
		<!--Abstandsangaben funktionieren wie Margin-->
		<Button Content="Test" Padding="100, 20, 0, 0"/>

		<!--Alignment-->
		<!--HorizontalAlignment/VerticalAligment: Richten die Komponente anhand des Parents aus-->
		<!--HorizontalContentAlignment/VerticalContentAligment: Richten den Inhalt der Komponente anhand sich selbst aus-->
		<Button	Content="Test"
				Width="100"
				HorizontalAlignment="Right"
				HorizontalContentAlignment="Left"/>

		<!--StackPanel: Stapelt die Komponente automatisch übereinander, und streckt diese von links nach rechts-->
		<StackPanel>
			<Button Content="Test1"/>
			<Button Content="Test2"/>
			<Button Content="Test3"/>
		</StackPanel>
		<!--Dieses StackPanel ist nur so hoch wie die Buttons selbst, weil das umliegende StackPanel (oben) diese Eigenschaft vorgibt-->
		<!--Das StackPanel ist nur so hoch wie es sein muss, aber maximal Breit-->
		<StackPanel Orientation="Horizontal">
			<Button Content="Test1"/>
			<Button Content="Test2"/>
			<Button Content="Test3"/>
		</StackPanel>

		<!--WrapPanel: Gleiches StackPanel, aber es wrapped-->
		<WrapPanel Orientation="Horizontal">
			<Button Content="Sehr Langer Text"/>
			<Button Content="Sehr Langer Text"/>
			<Button Content="Sehr Langer Text"/>
			<Button Content="Sehr Langer Text"/>
			<Button Content="Sehr Langer Text"/>
		</WrapPanel>

		<!--DockPanel: Erlaubt, das Andocken von Komponenten an die vier Seiten des Panels selbst-->
		<!--WICHTIG: Reihenfolge der DockPanel.Dock Properties beachten-->
		<!--Jede Dock-Anweisung ist den vorherigen Anweisungen untergeordnet-->
		<DockPanel Height="200">
			<Button Content="TestTop" DockPanel.Dock="Top"/>
			<Button Content="TestBottom" DockPanel.Dock="Bottom"/>
			<Button Content="TestLeft" DockPanel.Dock="Left"/>
			<Button Content="TestRight" DockPanel.Dock="Right"/>
			<Button Content="TestCenter"/>
		</DockPanel>
		
		<!--Grid: Gibt die Möglichkeit, Spalten und Zeilen zu definieren-->
		<!--Jede Komponente benötigt eine Zeile + Spalte-->
		<!--Ermöglicht genaueste Positionierung von Elementen-->
		
		<!--Höhe/Breite-->
		<!--Spalten/Zeilen können fixe Breiten/Höhen gegeben werden-->
		<!--Die restlichen Spalten/Zeilen nehmen dann den restlichen Platz ein-->
		<!--Es können auch relative Höhen/Breiten angegeben werden (mit *)-->
		<Grid Height="100">
			<Grid.ColumnDefinitions>
				<ColumnDefinition/>
				<ColumnDefinition Width="Auto"/> <!--Width="Auto": Passt die Spaltenbreite auf den Inhalt an-->
				<ColumnDefinition Width="200"/>
			</Grid.ColumnDefinitions>
			<Grid.RowDefinitions> <!--Insgesamt 6/6 an Platz zur Verfügung -> fixe Height von 100 wird auf 6 Teile aufgeteilt-->
				<RowDefinition/> <!--1/6 des Platzes-->
				<RowDefinition Height="2*"/> <!--2/6 = 1/3 des Platzes-->
				<RowDefinition Height="3*"/> <!--3/6 = 1/2 des Platzes-->
			</Grid.RowDefinitions>

			<!--Hier kann mit Grid.Row und Grid.Column eine Spalte/Zeile angegeben werden-->
			<Button Grid.Row="2" Grid.Column="1" Content="Test"/>
			<TextBox Grid.Row="2" Grid.Column="2" Background="Aqua"/>
			
			<!--Mit ColumnSpan/RowSpan kann eine Komponente sich über Definitions hinausstrecken-->
			<Button Grid.ColumnSpan="2" Grid.RowSpan="2"/>
		</Grid>

		<!--UniformGrid: Erzeugt anhand von zwei Zahlen Spalten & Zeilen-->
		<!--Alle Komponente werden automatisch positioniert anhand der Reihenfolge im XAML-->
		<UniformGrid Columns="3" Rows="3">
			<Button Content="Test1"/>
			<Button Content="Test2"/>
			<Button Content="Test3"/>
			<Button Content="Test4"/>
			<Button Content="Test5"/>
			<Button Content="Test6"/>
			<Button Content="Test7"/>
			<Button Content="Test8"/>
			<Button Content="Test9"/>
		</UniformGrid>

		<!--Viewbox: Ermöglicht, vollautomatisch Skalierung des Inhalts anhand der Fenstergröße-->
		<Viewbox>
			<Button Content="Test"/>
		</Viewbox>

		<!--Border: Ermöglicht, einen Rahmen um beliebige Komponente zu geben-->
		<!--WICHTIG: Kann nur ein Element enthalten -> Layoutkomponente-->
		<Border BorderBrush="LightGreen" BorderThickness="5">
			<UniformGrid Columns="3" Rows="3">
				<Button Content="Test1"/>
				<Button Content="Test2"/>
				<Button Content="Test3"/>
				<Button Content="Test4"/>
				<Button Content="Test5"/>
				<Button Content="Test6"/>
				<Button Content="Test7"/>
				<Button Content="Test8"/>
				<Button Content="Test9"/>
			</UniformGrid>
		</Border>

		<!--ScrollViewer: Ermöglicht, das Scrollen von Inhalt-->
		<!--z.B.: Langer Text, Menü mit vielen Buttons-->
		<!--ScrollbarVisibility: Scrollbar anzeigen, selbst wenn nicht genug Text zum Scrollen vorhanden ist-->
		<ScrollViewer Height="100" VerticalScrollBarVisibility="Visible">
			<TextBlock TextWrapping="Wrap" Text="Langer Text Langer TextLanger TextLanger TextLanger TextLanger TextLanger TextLanger TextLanger TextLanger TextLanger TextLanger TextLanger TextLanger TextLanger TextLanger TextLanger TextLanger TextLanger TextLanger TextLanger TextLanger TextLanger TextLanger TextLanger TextLanger TextLanger TextLanger TextLanger TextLanger TextLanger TextLanger Text"/>
		</ScrollViewer>
	</StackPanel>
</Window>
